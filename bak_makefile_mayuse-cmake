# Compiler and flags
CXX = g++
CXXFLAGS = -std=c++23 -O3 -Wall -Wextra -Wpedantic -pthread -fPIC
LDFLAGS = -lcpprest -lboost_system -lsqlite3 -lz -lssl -lcrypto

# Directories
SRC_DIR = src
BUILD_DIR = build
BIN_DIR = bin

# Executable name
TARGET = $(BIN_DIR)/edgar_fetch

# Source files
SRCS = $(SRC_DIR)/*
OBJS = $(SRCS:$(SRC_DIR)/%.cpp=$(BUILD_DIR)/%.o)

# Include paths for libraries
INCLUDES = -I/usr/include

# Library flags
LIBS = -lcpprest -lboost_system -lsqlite3 -lz -lssl -lcrypto -pthread

# Default target
all: $(TARGET)

# Build the target
$(TARGET): $(OBJS) | $(BIN_DIR)
	$(CXX) $(CXXFLAGS) $(OBJS) -o $(TARGET) $(LIBS)

# Compile source files to object files
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.cpp | $(BUILD_DIR)
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

# Create necessary directories
$(BIN_DIR):
	mkdir -p $(BIN_DIR)

$(BUILD_DIR):
	mkdir -p $(BUILD_DIR)

# Clean build files
clean:
	rm -rf $(BUILD_DIR) $(BIN_DIR)

# Run the program
run: $(TARGET)
	./$(TARGET)

.PHONY: all clean run